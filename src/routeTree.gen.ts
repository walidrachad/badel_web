/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrdersIndexRouteImport } from './routes/orders/index'
import { Route as CheckoutIndexRouteImport } from './routes/checkout/index'
import { Route as OrdersIdRouteImport } from './routes/orders/$id'
import { Route as CheckoutWalletIndexRouteImport } from './routes/checkout/$wallet/index'
import { Route as ChargesNameIndexRouteImport } from './routes/charges.$name/index'
import { Route as ChargesNameIdIndexRouteImport } from './routes/charges.$name/$id/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersIndexRoute = OrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutIndexRoute = CheckoutIndexRouteImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersIdRoute = OrdersIdRouteImport.update({
  id: '/orders/$id',
  path: '/orders/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutWalletIndexRoute = CheckoutWalletIndexRouteImport.update({
  id: '/checkout/$wallet/',
  path: '/checkout/$wallet/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChargesNameIndexRoute = ChargesNameIndexRouteImport.update({
  id: '/charges/$name/',
  path: '/charges/$name/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChargesNameIdIndexRoute = ChargesNameIdIndexRouteImport.update({
  id: '/charges/$name/$id/',
  path: '/charges/$name/$id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orders/$id': typeof OrdersIdRoute
  '/checkout': typeof CheckoutIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/charges/$name': typeof ChargesNameIndexRoute
  '/checkout/$wallet': typeof CheckoutWalletIndexRoute
  '/charges/$name/$id': typeof ChargesNameIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orders/$id': typeof OrdersIdRoute
  '/checkout': typeof CheckoutIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/charges/$name': typeof ChargesNameIndexRoute
  '/checkout/$wallet': typeof CheckoutWalletIndexRoute
  '/charges/$name/$id': typeof ChargesNameIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/orders/$id': typeof OrdersIdRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/orders/': typeof OrdersIndexRoute
  '/charges/$name/': typeof ChargesNameIndexRoute
  '/checkout/$wallet/': typeof CheckoutWalletIndexRoute
  '/charges/$name/$id/': typeof ChargesNameIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orders/$id'
    | '/checkout'
    | '/orders'
    | '/charges/$name'
    | '/checkout/$wallet'
    | '/charges/$name/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orders/$id'
    | '/checkout'
    | '/orders'
    | '/charges/$name'
    | '/checkout/$wallet'
    | '/charges/$name/$id'
  id:
    | '__root__'
    | '/'
    | '/orders/$id'
    | '/checkout/'
    | '/orders/'
    | '/charges/$name/'
    | '/checkout/$wallet/'
    | '/charges/$name/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrdersIdRoute: typeof OrdersIdRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  ChargesNameIndexRoute: typeof ChargesNameIndexRoute
  CheckoutWalletIndexRoute: typeof CheckoutWalletIndexRoute
  ChargesNameIdIndexRoute: typeof ChargesNameIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders/$id': {
      id: '/orders/$id'
      path: '/orders/$id'
      fullPath: '/orders/$id'
      preLoaderRoute: typeof OrdersIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/$wallet/': {
      id: '/checkout/$wallet/'
      path: '/checkout/$wallet'
      fullPath: '/checkout/$wallet'
      preLoaderRoute: typeof CheckoutWalletIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/charges/$name/': {
      id: '/charges/$name/'
      path: '/charges/$name'
      fullPath: '/charges/$name'
      preLoaderRoute: typeof ChargesNameIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/charges/$name/$id/': {
      id: '/charges/$name/$id/'
      path: '/charges/$name/$id'
      fullPath: '/charges/$name/$id'
      preLoaderRoute: typeof ChargesNameIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrdersIdRoute: OrdersIdRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  ChargesNameIndexRoute: ChargesNameIndexRoute,
  CheckoutWalletIndexRoute: CheckoutWalletIndexRoute,
  ChargesNameIdIndexRoute: ChargesNameIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
